# Maintainer:  Bart≈Çomiej Piotrowski <bpiotrowski@archlinux.org>
# Contributor: Allan McRae <allan@archlinux.org>

# toolchain build order: linux-api-headers->glibc->binutils->gcc->binutils->glibc
# NOTE: valgrind requires rebuilt with each major glibc version

pkgbase=glibc
pkgname=(glibc lib32-glibc)
pkgver=2.28
pkgrel=305
arch=(x86_64)
url='http://www.gnu.org/software/libc'
license=(GPL LGPL)
makedepends=(git gd lib32-gcc-libs)
options=(!strip staticlibs)
#source=(https://ftp.gnu.org/gnu/glibc/glibc-$pkgver.tar.xz{,.sig}
_commit=b297581acb66f80b513996c1580158b0fb12d469
source=(git+https://sourceware.org/git/glibc.git#commit=$_commit
        locale.gen.txt
        locale-gen
        lib32-glibc.conf
        bz20338.patch
        0001-Revert-elf-Correct-absolute-SHN_ABS-symbol-run-time-.patch
       nsswitch-altfiles.patch
ld-so-cache-in-var.patch
fewerlocales.patch
mkdir-ldconfig.patch
nonscd.patch
alternate_trim.patch
madvise-bss.patch
spinaphore.patch
tzselect-proper-zone-file.patch
large-page-huge-page.patch
use_madv_free.patch
malloc_tune.patch
0001-misc-Support-fallback-stateless-shells-path-in-absen.patch
stateless.patch
nsswitch-altfiles-bugfix.patch
mathlto.patch
vzeroupper-2.27.patch
0001-x86-64-Remove-sysdeps-x86_64-fpu-s_sinf.S.patch
pause.patch
gcc-8-fix.patch
spin-smarter.patch
nostackshrink.patch
strcpy-avx2.patch
fix-ld-audit-performance.patch
c-utf8-locale.patch
CVE-2016-10739.patch
CVE-2019-6488.patch)

prepare() {
  mkdir -p glibc-build lib32-glibc-build

  [[ -d glibc-$pkgver ]] && ln -s glibc-$pkgver glibc 
  cd glibc

patch -Np1 < ../bz20338.patch

#patch -Np1 < ../nonscd.patch
#patch -Np1 < ../alternate_trim.patch
#patch -Np1 < ../madvise-bss.patch
#patch -Np1 < ../spinaphore.patch
#patch -Np1 < ../large-page-huge-page.patch
#patch -Np1 < ../use_madv_free.patch
#patch -Np1 < ../malloc_tune.patch
#patch -Np1 < ../0001-misc-Support-fallback-stateless-shells-path-in-absen.patch
#patch -Np1 < ../stateless.patch
#patch -Np1 < ../mathlto.patch
#patch -Np1 < ../vzeroupper-2.27.patch
#patch -Np1 < ../gcc-8-fix.patch
#patch -Np1 < ../spin-smarter.patch
#patch -Np1 < ../nostackshrink.patch

#patch -Np1 < ../fewerlocales.patch
patch -Np1 < ../nonscd.patch
patch -Np1 < ../alternate_trim.patch
patch -Np1 < ../madvise-bss.patch
patch -Np1 < ../spinaphore.patch
patch -Np1 < ../large-page-huge-page.patch
patch -Np1 < ../use_madv_free.patch
patch -Np1 < ../malloc_tune.patch
patch -Np1 < ../0001-misc-Support-fallback-stateless-shells-path-in-absen.patch
patch -Np1 < ../stateless.patch
patch -Np1 < ../mathlto.patch
patch -Np1 < ../vzeroupper-2.27.patch
#patch -Np1 < ../0001-x86-64-Remove-sysdeps-x86_64-fpu-s_sinf.S.patch
patch -Np1 < ../pause.patch
patch -Np1 < ../gcc-8-fix.patch
patch -Np1 < ../spin-smarter.patch
patch -Np1 < ../nostackshrink.patch
patch -Np1 < ../strcpy-avx2.patch
patch -Np1 < ../fix-ld-audit-performance.patch
#patch -Np1 < ../c-utf8-locale.patch
patch -Np1 < ../CVE-2016-10739.patch
patch -Np1 < ../CVE-2019-6488.patch
}

build() {
  local _configure_flags=(
      --prefix=/usr
      --with-headers=/usr/include
      --with-bugurl=https://bugs.archlinux.org/
      --enable-add-ons
      --enable-bind-now
      --enable-lock-elision
      --enable-multi-arch
      --enable-kernel=4.17
      --disable-profile
      --disable-werror
  )

  cd "$srcdir/glibc-build"

  echo "slibdir=/usr/lib" >> configparms
  echo "rtlddir=/usr/lib" >> configparms
  echo "sbindir=/usr/bin" >> configparms
  echo "rootsbindir=/usr/bin" >> configparms

  # remove fortify for building libraries
  CPPFLAGS=${CPPFLAGS/-D_FORTIFY_SOURCE=2/}

  "$srcdir/glibc/configure" \
      --libdir=/usr/lib \
      --libexecdir=/usr/lib \
      --enable-cet \
      ${_configure_flags[@]}

  # build libraries with fortify disabled
  echo "build-programs=no" >> configparms
  make

  # re-enable fortify for programs
  sed -i "/build-programs=/s#no#yes#" configparms

  echo "CC += -D_FORTIFY_SOURCE=2" >> configparms
  echo "CXX += -D_FORTIFY_SOURCE=2" >> configparms
  make

  cd "$srcdir/lib32-glibc-build"
  export CC="gcc -m32 -mstackrealign"
  export CXX="g++ -m32 -mstackrealign"

  echo "slibdir=/usr/lib32" >> configparms
  echo "rtlddir=/usr/lib32" >> configparms
  echo "sbindir=/usr/bin" >> configparms
  echo "rootsbindir=/usr/bin" >> configparms

  # remove fortify for building libraries
  CPPFLAGS=${CPPFLAGS/-D_FORTIFY_SOURCE=2/}
  CFLAGS=${CFLAGS/-fno-plt/}
  CXXFLAGS=${CXXFLAGS/-fno-plt/}

  "$srcdir/glibc/configure" \
      --host=i686-pc-linux-gnu \
      --libdir=/usr/lib32 \
      --libexecdir=/usr/lib32 \
      ${_configure_flags[@]}

  # build libraries with fortify disabled
  echo "build-programs=no" >> configparms
  make

  # re-enable fortify for programs
  sed -i "/build-programs=/s#no#yes#" configparms

  echo "CC += -D_FORTIFY_SOURCE=2" >> configparms
  echo "CXX += -D_FORTIFY_SOURCE=2" >> configparms
  make

}

check() {
  cd glibc-build

  # remove fortify in preparation to run test-suite
  sed -i '/FORTIFY/d' configparms

  # some failures are "expected"
  make check || true
}

package_glibc() {
  pkgdesc='GNU C Library'
  depends=('linux-api-headers>=4.10' tzdata filesystem)
  optdepends=('gd: for memusagestat')
  install=glibc.install
  backup=(etc/gai.conf
          etc/locale.gen
          etc/nscd.conf)
  groups=(base)

  install -dm755 "$pkgdir/etc"
  touch "$pkgdir/etc/ld.so.conf"

  make -C glibc-build install_root="$pkgdir" install
  rm -f "$pkgdir"/etc/ld.so.{cache,conf}

  # Shipped in tzdata
  rm -f "$pkgdir"/usr/bin/{tzselect,zdump,zic}

  cd glibc

  install -dm755 "$pkgdir"/usr/lib/{locale,systemd/system,tmpfiles.d}
  install -m644 nscd/nscd.conf "$pkgdir/etc/nscd.conf"
  install -m644 nscd/nscd.service "$pkgdir/usr/lib/systemd/system"
  install -m644 nscd/nscd.tmpfiles "$pkgdir/usr/lib/tmpfiles.d/nscd.conf"
  install -dm755 "$pkgdir/var/db/nscd"

  install -m644 posix/gai.conf "$pkgdir"/etc/gai.conf

  install -m755 "$srcdir/locale-gen" "$pkgdir/usr/bin"

  # Create /etc/locale.gen
  install -m644 "$srcdir/locale.gen.txt" "$pkgdir/etc/locale.gen"
  sed -e '1,3d' -e 's|/| |g' -e 's|\\| |g' -e 's|^|#|g' \
    "$srcdir/glibc/localedata/SUPPORTED" >> "$pkgdir/etc/locale.gen"

  if check_option 'debug' n; then
    find "$pkgdir"/usr/bin -type f -executable -exec strip $STRIP_BINARIES {} + 2> /dev/null || true
    find "$pkgdir"/usr/lib -name '*.a' -type f -exec strip $STRIP_STATIC {} + 2> /dev/null || true

    # Do not strip these for gdb and valgrind functionality, but strip the rest
    find "$pkgdir"/usr/lib \
      -not -name 'ld-*.so' \
      -not -name 'libc-*.so' \
      -not -name 'libpthread-*.so' \
      -not -name 'libthread_db-*.so' \
      -name '*-*.so' -type f -exec strip $STRIP_SHARED {} + 2> /dev/null || true
  fi
}

package_lib32-glibc() {
  pkgdesc='GNU C Library (32-bit)'
  depends=("glibc=$pkgver")

  cd lib32-glibc-build

  make install_root="$pkgdir" install
  rm -rf "$pkgdir"/{etc,sbin,usr/{bin,sbin,share},var}

  # We need to keep 32 bit specific header files
  find "$pkgdir/usr/include" -type f -not -name '*-32.h' -delete

  # Dynamic linker
  install -d "$pkgdir/usr/lib"
  ln -s ../lib32/ld-linux.so.2 "$pkgdir/usr/lib/"

  # Add lib32 paths to the default library search path
  install -Dm644 "$srcdir/lib32-glibc.conf" "$pkgdir/etc/ld.so.conf.d/lib32-glibc.conf"

  # Symlink /usr/lib32/locale to /usr/lib/locale
  ln -s ../lib/locale "$pkgdir/usr/lib32/locale"

  if check_option 'debug' n; then
    find "$pkgdir"/usr/lib32 -name '*.a' -type f -exec strip $STRIP_STATIC {} + 2> /dev/null || true
    find "$pkgdir"/usr/lib32 \
      -not -name 'ld-*.so' \
      -not -name 'libc-*.so' \
      -not -name 'libpthread-*.so' \
      -not -name 'libthread_db-*.so' \
      -name '*-*.so' -type f -exec strip $STRIP_SHARED {} + 2> /dev/null || true
  fi
}
